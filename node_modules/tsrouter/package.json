{
  "_args": [
    [
      "tsrouter@git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
      "/home/puje/projects/angular-filemanager-api"
    ]
  ],
  "_from": "git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
  "_id": "tsrouter@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/tsrouter",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/Farcek/tsrouter/25f8fb8bb8df52f35804f24bea47ce832565db85/package.json",
      "gitUrl": "git://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
      "httpsUrl": "git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
      "shortcut": "github:Farcek/tsrouter#25f8fb8bb8df52f35804f24bea47ce832565db85",
      "ssh": "git@github.com:Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
      "sshUrl": "git+ssh://git@github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
      "type": "github"
    },
    "name": "tsrouter",
    "raw": "tsrouter@git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
    "rawSpec": "git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
    "scope": null,
    "spec": "git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
  "_shasum": "83efe9f4c2bea76b2d28642cf9a944793497829c",
  "_shrinkwrap": null,
  "_spec": "tsrouter@git+https://github.com/Farcek/tsrouter.git#25f8fb8bb8df52f35804f24bea47ce832565db85",
  "_where": "/home/puje/projects/angular-filemanager-api",
  "author": "",
  "dependencies": {
    "bluebird": "^3.4.0"
  },
  "description": "TS router ----------",
  "devDependencies": {},
  "gitHead": "25f8fb8bb8df52f35804f24bea47ce832565db85",
  "license": "ISC",
  "main": "dist/tsrouter.js",
  "name": "tsrouter",
  "optionalDependencies": {},
  "readme": "TS router\n----------\n\n\n#### mode 1\n\n````javascript\n    import * as  tsrouter from \"tsrouter\";\n    \n\n    type IParam = sysopapi.category.edit.IParam;\n    type IResult = sysopapi.category.edit.IResult;\n\n    export default class Edit extends tsrouter.TSHandler<IParam, IResult> {\n\n        public req(req: express.Request): IParam | Promise<IParam> {\n            ...\n        }\n\n        public valid(param: IParam, req: express.Request): boolean | Promise<boolean> {\n            ...\n        }\n\n        public res(param: IParam, res: express.Response): IResult | Promise<IResult> {\n            ...\n        }\n    }\n````\n\n#### model 2\n\n````javascript\n\n    type IParam = sysopapi.category.create.IParam;\n    type IResult = sysopapi.category.create.IResult;\n    \n    export const create = new tsrouter.Router<IParam,IResult>({\n        parse: req => {\n            return {\n                name: req.body.name\n            }\n        },\n        valid: params => {\n            return !lodash.isEmpty(params.name);\n        },\n        process: params => {\n            return model.nextId(model.GiftCategory)\n                .then(newId => {\n    \n                    return model.GiftCategory.create({\n                        id: newId,\n                        name: params.name\n                    })\n                })\n    \n                .then(() => {\n                    return {\n                        status: \"ok\"\n                    }\n                })\n        }\n    });\n    \n````\n#### model RouteBasicParam\n\n````javascript\n\n    export const NewId = new tsrouter.RouteBasicParam<sysopapi.core.INextId>({\n            process: () => {\n                return model.nextId(model.Customer)\n                    .then(id => {\n                        return {\n                            id: id\n                        };\n                    });\n            }\n        });\n    \n````\n\n\n\n\n    ",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "typings": "dist/tsrouter.d.ts",
  "version": "1.0.0"
}
